# 공통 설정
app:
  cookie:
    http-only: true
    max-age-seconds: 86400
    path: /


--- # local
spring:
  config:
    activate:
      on-profile: local

  servlet:
    multipart:
      max-file-size: 10MB
      
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/taskmate
    username: ${db-username}
    password: ${db-password}
          
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

    defer-datasource-initialization: true

  sql:
    init:
      mode: always # ddl-auto가 update 일때는 never, create일 때는 always로 설정해야 skillstack 테이블에 데이터가 중복으로 들어가지 않음

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${github-client-id}
            client-secret: ${github-client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - read:user
              - user:email # 모든 이메일 정보를 가져오기 위한 설정
          google:
            client-id: ${google-client-id}
            client-secret: ${google-client-secret}
            scope: email, profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"

          kakao:
            client-id: ${kakao-client-id}
#            client-secret: ${kakao-client-secret}
            client-name: Kakao
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code

        provider:
          github:
            authorization-url: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          google:
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo


  jwt:
    key: dfsdfjklsf3j34324lk32l1j2312@#!@#!@#asdlksadjsalkdksajdlj2jk1j31k2j3l12kjdsaldkas@dkljaslkdjsakdjsadlksajlkdasjdlj2l13jl1k3@
    validity:
      atk: 30000000
      rtk: 30000000

  data:
    redis:
      host: localhost
      port: 6379
      # password:  (비밀번호 필요 시 추가)

  mail:
    host: smtp.gmail.com # 1
    port: 587 # 2
    username: ${mail-username} # 3
    password: ${mail-password} # 4
    properties:
      mail:
        smtp:
          auth: true # 5
          timeout: 5000 # 6
          starttls:
            enable: true # 7
frontend:
  url: ${frontend-url}

app:
  cookie:
    secure: false # 로컬 http 환경
    sameSite: Lax
    domain: ""

--- # prod(cloud)

server:
  forward-headers-strategy: native

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/taskmate # 배포시 url 변경
    username: ${db-username}
    password: ${db-password}

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

    defer-datasource-initialization: true

  sql:
    init:
      mode: always # ddl-auto가 update 일때는 never, create일 때는 always로 설정해야 skillstack 테이블에 데이터가 중복으로 들어가지 않음

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${github-client-id}
            client-secret: ${github-client-secret}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - read:user
              - user:email # 모든 이메일 정보를 가져오기 위한 설정
          google:
            client-id: ${google-client-id}
            client-secret: ${google-client-secret}
            scope: email, profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"

          kakao:
            client-id: ${kakao-client-id}
            #            client-secret: ${kakao-client-secret}
            client-name: Kakao
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - account_email
              - profile_image
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code

        provider:
          github:
            authorization-url: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

          google:
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo


  jwt:
    key: ${jwt-key}
    validity:
      atk: 30000000
      rtk: 30000000

  data:
    redis:
      host: localhost
      port: 6379
      # password:  (비밀번호 필요 시 추가)

  mail:
    host: smtp.gmail.com # 1
    port: 587 # 2
    username: ${mail-username} # 3
    password: ${mail-password} # 4
    properties:
      mail:
        smtp:
          auth: true # 5
          timeout: 5000 # 6
          starttls:
            enable: true # 7

# AWS S3 설정
aws:
  region: ap-northeast-2
  s3:
    bucket-name: taskmate-bucket2
    bucket-url: https://taskmate-bucket2.s3.ap-northeast-2.amazonaws.com

frontend:
  url: ${frontend-url}

app:
  cookie:
    secure: true
    sameSite: None
    domain: api.task-mate.co.kr